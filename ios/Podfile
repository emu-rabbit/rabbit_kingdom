# Uncomment this line to define a global platform for your project
platform :ios, '13.0'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
  target 'RunnerTests' do
    inherit! :search_paths
  end
end

post_install do |installer|
  require 'yaml'

  # 讀取 Flutter 專案的版本號
  version = YAML.load_file('../pubspec.yaml')['version']
  short_version, build_number = version.split('+')
  plist_path = 'Runner/Info.plist'

  # 寫入 Info.plist
  if File.exist?(plist_path)
    puts "📦 同步 Flutter 版號 #{short_version} (build #{build_number}) 到 Info.plist"
    system("/usr/libexec/PlistBuddy -c \"Set :CFBundleShortVersionString #{short_version}\" #{plist_path}")
    system("/usr/libexec/PlistBuddy -c \"Set :CFBundleVersion #{build_number}\" #{plist_path}")
  end

  # 保留 flutter 預設設定
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
  end
end
